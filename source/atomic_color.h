
#ifndef ATOMIC_COLOR_H
#define ATOMIC_COLOR_H

#pragma once

#ifdef AISCOPE_GLOBAL
unsigned char atom_colors[] = { 51, 205, 205, 255,	//C_custom
						255, 255, 255, 255,	//H
						80, 240, 240, 255, //He
						255, 20, 151, 255, //Li
						255, 20, 151, 255, //Be
						255, 20, 151, 255, //B
						51, 205, 205, 255, //C
						143, 143, 255, 255, //N
						255, 0, 0, 255, //O
						255, 20, 151, 255, //F
						00, 0xbf, 0xff, 255, //Ne
						0, 0, 255, 255, //Na
						255, 20, 151, 255, //Mg
						255, 20, 151, 255, //Al
						255, 20, 151, 255, //Si
						255, 128, 0, 255, //P
						255, 255, 51, 255, //S
						0, 255, 0, 255, //Cl
						0, 100, 255, 255, //Ar
						255, 20, 151, 255, //K
						51, 77, 77, 255, //Ca
						255, 255, 255, 255,	//
						255, 240, 30, 255, //
						255, 20, 151, 255, //V
						255, 20, 151, 255, //Cr
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 240, 30, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 255, 51, 255, //Kr
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255,	//
						255, 20, 151, 255, //Mo
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //Xe
						255, 20, 151, 255, //
						255, 255, 51, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255,	//
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //W
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //Rn
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //
						255, 20, 151, 255, //Uuo
						};

unsigned char bondnum_colors[] = { 0, 255, 255, 255,	//single atom
						0, 128, 255, 255,	//tip
						255, 220, 0, 255, //sp1
						0, 255, 192, 255, //sp2
						255, 0, 0, 255, //sp3
						255, 20, 151, 255, //5 bonds
						0, 0, 255, 0, //6 bonds
						0, 0, 255, 0, //7 bonds
						255, 20, 151, 0, //8 bonds
						0, 255, 0, 0, //9 bonds
						255, 255, 0, 255, //10 bonds
						255, 255, 0, 255, //11 bonds
						255, 255, 0, 255, //12 bonds
						255, 255, 0, 255, //13 bonds
						255, 255, 0, 255, //14 bonds
						};

#else	//AISCOPE_GLOBAL

extern unsigned char atom_colors[];
extern unsigned char bondnum_colors[];

#endif	//AISCOPE_GLOBAL


const int COLOR_LIMIT_BOND = 15;

#endif	//!ATOMIC_COLOR_H
